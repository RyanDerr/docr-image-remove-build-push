name: Clean, Build, and Push To Digital Ocean Container Registry

on:
  workflow_call:
    inputs:
      image-registry-name:
        description: 'The name of the Digital Ocean Registry'
        type: string
        required: true
      image-name:
        description: 'The name of the docker image to push (e.g. my-app)'
        type: string
        required: true
      image-store-limit:
        description: 'The maximum number of images to keep in the container registry (e.g. 10)'
        type: number
        required: false
        default: -1
      docker-path:
        description: 'Relative path to Dockerfile within codebase'
        type: string
        required: false
        default: .
    secrets:
      container-registry-token:
        description: 'API token to authenticate and authorize Digital Ocean Container Registry'
        required: true

env:
  IMAGE_REGISTRY: registry.digitalocean.com/${{ inputs.image-registry-name }}

jobs:
  remove-oldest-image:
    runs-on: ubuntu-latest

    steps:
      - name: Install DigitalOceanCTL
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.container-registry-token }}

      - name: Remove Older Images From DOCR
        uses: RyanDerr/reusable-workflow-templates/.github/actions/docr-image-remove@main
        with:
          image-repository-name: ${{ inputs.image-name }}
          image-storage-limit: ${{ inputs.image-store-limit }}

  build-and-push:
    runs-on: ubuntu-latest
    needs: remove-oldest-image

    steps:
      - name: Set Env Tag
        run: echo "NOW=$(date +'%Y.%m.%d.%H.%M')" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and Tag Docker Image
        run:  |
          docker build -t $IMAGE_REGISTRY/${{ inputs.image-name }}:latest -t $IMAGE_REGISTRY/${{ inputs.image-name }}:${{ env.NOW }} ${{ inputs.docker-path }}

      - name: Install DigitalOceanCTL
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.container-registry-token }}

      - name: Login to Digital Ocean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to Digital Ocean Container Registry
        run: |
          docker push $IMAGE_REGISTRY/${{ inputs.image-name }}:latest
          docker push $IMAGE_REGISTRY/${{ inputs.image-name }}:${{ env.NOW }}

      - name: Logout From Digital Ocean
        run: doctl registry logout

  purge-data:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Install DigitalOceanCTL
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.container-registry-token }}

      - name: Run Purge On DOCR
        run: doctl registry garbage-collection start --force --include-untagged-manifests ${{ inputs.image-registry-name }}